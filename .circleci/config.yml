version: 2
jobs:
  build:
    working_directory: ~/spotify/helios
    parallelism: 6
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      CIRCLE_MACHINE_EXECUTOR: true
      MAVEN_OPTS: -Xmx128m
      JAVA_VERSION: jdk1.8.0

    machine: true
    
    steps:
    - checkout

    # 'See docs on artifact collection here https://circleci.com/docs/2.0/artifacts/'
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS

    # tells CircleCI that we want virtualenv so that we can pip install codecov without errors
    - run:
        name: Install dependencies
        working_directory: ~/spotify/helios
        command: |
         apt-get -y -qq update
         apt-get -y -qq install jq
         update-alternatives --set java /usr/lib/jvm/$JAVA_VERSION/bin/java; sudo update-alternatives --set javac /usr/lib/jvm/$JAVA_VERSION/bin/javac; echo -e "export JAVA_HOME=/usr/lib/jvm/$JAVA_VERSION" >> $BASH_ENV
         if [[ $(python --version 2>&1) = *"2.7.10"* ]] || pyenv versions --bare | grep -x -q '2.7.10'; then pyenv global 2.7.10;else pyenv install --skip-existing  2.7.10 && pyenv global 2.7.10 && pyenv rehash && pip install virtualenv && pip install nose && pip install pep8 && pyenv rehash;fi

    # Configuring Docker to accept remote connections
    - run: ./circle.sh pre_machine && ./circle.sh pre_machine_docker

    # Restarting docker for the changes to be applied
    - run: sudo service docker restart

    - run: ./circle.sh post_machine

    - run: ./circle.sh dependencies

    - run: ./circle.sh test

    - run: if [ "$CIRCLE_NODE_INDEX" == "0" ]; then ./circle.sh post_test; fi

    - run: ./circle.sh collect_test_reports

    - store_test_results:
        path: /tmp/circleci-test-results
        
    # Save artifacts
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: artifacts
    - store_artifacts:
        path: /var/log/upstart/docker.log
    - store_artifacts:
        path: /tmp/circleci-test-results

  build_java11:
    docker:
      - image: spotify/helios-test-container:1
    working_directory: ~/spotify/helios
    parallelism: 6
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      MAVEN_OPTS: -Xmx128m

    steps:
    - checkout

    - setup_remote_docker

    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS

    - run: ./circle.sh pre_machine

    - run:
        command: ./circle.sh dependencies
        # Increase the timeout from the default of 10 minutes to 20.
        # A docker executor has less resources and is therefore slower.
        # Without this increased timeout, downloading deps often times out.
        no_output_timeout: 20m

    - run:
        command: ./circle.sh test
        no_output_timeout: 20m

    - run: if [ "$CIRCLE_NODE_INDEX" == "0" ]; then ./circle.sh post_test; fi

    - run: ./circle.sh collect_test_reports

    - store_test_results:
        path: /tmp/circleci-test-results

    # Save artifacts
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: artifacts
    - store_artifacts:
        path: /var/log/upstart/docker.log
    - store_artifacts:
        path: /tmp/circleci-test-results

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - build_java11
